package com.fullstack.mystore.entity;

import java.util.List;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.Id;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;


@Entity
@Table(name = "app_user")
public class User {
	@Id
	@GeneratedValue
	private Integer id;
	private String name;
	private String address;
	@Column(length = 10)
	private Integer phone;
	private String usename;
	private String password;
	private Integer role;
	
	@OneToMany(mappedBy = "user")
    private List<ShoppingCart> shoppingCarts;
	
	@OneToMany(mappedBy = "user")
    private List<ShopOrder> shopOrders;
	
	@OneToMany(mappedBy = "user")
    private List<Payment> payments;

	public Integer getId() {
		return id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getAddress() {
		return address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	public Integer getPhone() {
		return phone;
	}

	public void setPhone(Integer phone) {
		this.phone = phone;
	}

	public String getUsename() {
		return usename;
	}

	public void setUsename(String usename) {
		this.usename = usename;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public Integer getRole() {
		return role;
	}

	public void setRole(Integer role) {
		this.role = role;
	}

	public List<ShoppingCart> getShoppingCarts() {
		return shoppingCarts;
	}

	public void setShoppingCarts(List<ShoppingCart> shoppingCarts) {
		this.shoppingCarts = shoppingCarts;
	}

	public List<ShopOrder> getShopOrders() {
		return shopOrders;
	}

	public void setShopOrders(List<ShopOrder> shopOrders) {
		this.shopOrders = shopOrders;
	}

	public List<Payment> getPayments() {
		return payments;
	}

	public void setPayments(List<Payment> payments) {
		this.payments = payments;
	}
	
}
