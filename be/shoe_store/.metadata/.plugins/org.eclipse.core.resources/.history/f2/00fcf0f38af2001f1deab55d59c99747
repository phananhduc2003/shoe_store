 package com.fullstack.mystore.controller;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.fullstack.mystore.entity.Product;
import com.fullstack.mystore.entity.ShoppingCart;
import com.fullstack.mystore.entity.ShoppingCartItem;
import com.fullstack.mystore.entity.User;
import com.fullstack.mystore.repository.ProductRepository;
import com.fullstack.mystore.repository.ShoppingCartItemRepository;
import com.fullstack.mystore.repository.ShoppingCartRepository;
import com.fullstack.mystore.repository.UserRepository;

@RestController
@RequestMapping("/cart")
public class ShoppingCartController {
	@Autowired
    private ShoppingCartRepository shoppingCartRepository;

    @Autowired
    private ProductRepository productRepository;

    @Autowired
    private ShoppingCartItemRepository shoppingCartItemRepository;

    @Autowired
    private UserRepository userRepository;

    public ShoppingCartController(ShoppingCartRepository shoppingCartRepository) {
        this.shoppingCartRepository = shoppingCartRepository;
    }
	
	@GetMapping("/{userId}")
    public List<ShoppingCartItem> getCartItems(@PathVariable Integer userId) {
        // Tìm giỏ hàng của người dùng từ repository
        ShoppingCart shoppingCart = shoppingCartRepository.findByUserId(userId);
        
        if (shoppingCart != null) {
            // Trả về danh sách các mặt hàng trong giỏ hàng của người dùng
            return shoppingCart.getItems();
        } else {
            // Nếu không tìm thấy giỏ hàng, trả về danh sách rỗng hoặc thông báo lỗi
            return List.of();  // Hoặc bạn có thể trả về một thông báo lỗi tùy thích
        }
    }
	@PostMapping("/add")
    public ResponseEntity<String> addToCart(@RequestParam Integer userId,
                                            @RequestParam Integer productId,
                                            @RequestParam int quantity) {
        // Kiểm tra user có tồn tại không
        Optional<User> userOptional = userRepository.findById(userId);
        if (!userOptional.isPresent()) {
            return ResponseEntity.status(404).body("Người dùng không tồn tại.");
        }
        User user = userOptional.get();

        // Lấy giỏ hàng của user (giỏ hàng đã tồn tại)
        Optional<ShoppingCart> cartOptional = shoppingCartRepository.findByUser(user);
        if (!cartOptional.isPresent()) {
            return ResponseEntity.status(404).body("Giỏ hàng của người dùng không tồn tại.");
        }
        ShoppingCart shoppingCart = cartOptional.get();

        // Kiểm tra sản phẩm có tồn tại không
        Optional<Product> productOptional = productRepository.findById(productId);
        if (!productOptional.isPresent()) {
            return ResponseEntity.status(404).body("Sản phẩm không tồn tại.");
        }
        Product product = productOptional.get();

        // Kiểm tra xem sản phẩm đã có trong giỏ hàng chưa
        ShoppingCartItem existingItem = shoppingCartItemRepository.findByShoppingCartAndProduct(shoppingCart, product);

        if (existingItem != null) {
            // Nếu sản phẩm đã có, cộng dồn số lượng
            existingItem.setQuantity(existingItem.getQuantity() + quantity);
            shoppingCartItemRepository.save(existingItem);
        } else {
            // Nếu chưa có, thêm sản phẩm mới vào giỏ hàng
            ShoppingCartItem newItem = new ShoppingCartItem();
            newItem.setShoppingCart(shoppingCart);
            newItem.setProduct(product);
            newItem.setQuantity(quantity);
            shoppingCartItemRepository.save(newItem);
        }

        return ResponseEntity.ok("Sản phẩm đã được thêm vào giỏ hàng.");
    }
}
