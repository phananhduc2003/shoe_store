package com.fullstack.mystore.controller;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.fullstack.mystore.entity.ShoppingCart;
import com.fullstack.mystore.entity.User;
import com.fullstack.mystore.repository.ShoppingCartRepository;
import com.fullstack.mystore.repository.UserRepository;

@RestController
public class UserController {
	@Autowired
	private UserRepository userRepository;

	@Autowired
    private ShoppingCartRepository shoppingCartRepository;
	
	public UserController(UserRepository userRepository, ShoppingCartRepository shoppingCartRepository) {
		super();
		this.userRepository = userRepository;
		this.shoppingCartRepository = shoppingCartRepository;
	}
	
	// API lấy danh sách user hoặc kiểm tra giỏ hàng của user khi có userId
    @GetMapping("/users")
    public Object getUsers(@RequestParam(required = false) Integer userId) {
        if (userId == null) {
            // Nếu không có userId, trả về danh sách tất cả user
            return userRepository.findAll();
        } else {
            // Nếu có userId, kiểm tra và tạo giỏ hàng nếu chưa có
            Optional<User> userOptional = userRepository.findById(userId);

            if (userOptional.isPresent()) {
                User user = userOptional.get();

                shoppingCartRepository.findByUser(user)
                    .orElseGet(() -> {
                        ShoppingCart newCart = new ShoppingCart();
                        newCart.setUser(user);
                        return shoppingCartRepository.save(newCart);
                    });

                return user;
            } else {
                throw new RuntimeException("Người dùng không tồn tại.");
            }
        }
    }
	
//	@GetMapping("/users")
//	public List<User> allUser() {
//		return userRepository.findAll();
//	}
//	
//	// Kiểm tra và tạo giỏ hàng khi user đăng nhập
//    @GetMapping("/user/{userId}")
//    public User getUser(@PathVariable Integer userId) {
//        Optional<User> userOptional = userRepository.findById(userId);
//        
//        if (userOptional.isPresent()) {
//            User user = userOptional.get();
//
//            // Kiểm tra nếu user chưa có giỏ hàng thì tạo mới
//            shoppingCartRepository.findByUser(user)
//                .orElseGet(() -> {
//                    ShoppingCart newCart = new ShoppingCart();
//                    newCart.setUser(user);
//                    return shoppingCartRepository.save(newCart);
//                });
//
//            return user;
//        } else {
//            throw new RuntimeException("Người dùng không tồn tại.");
//        }
//    }
	
}
