package com.fullstack.mystore.controller;

import java.io.UnsupportedEncodingException;
import java.util.Collections;
import java.util.HashMap;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.fullstack.mystore.service.VnpayService;

import jakarta.servlet.http.HttpServletRequest;

@RestController
@RequestMapping("/api/payment")
public class PaymentController {

    @Autowired
    private VnpayService vnpayService;

    @GetMapping("/create-vnpay")
    public ResponseEntity<?> createVnpayPayment(HttpServletRequest request,
                                                @RequestParam Long amount,
                                                @RequestParam String orderInfo) throws UnsupportedEncodingException {
        String paymentUrl = vnpayService.createPaymentUrl(request, amount, orderInfo);
        return ResponseEntity.ok(Collections.singletonMap("paymentUrl", paymentUrl));
    }

    @GetMapping("/vnpay-return")
    public ResponseEntity<?> handleVnpayReturn(HttpServletRequest request) {
        Map<String, String[]> paramMap = request.getParameterMap();
        Map<String, String> fields = new HashMap<>();

        for (Map.Entry<String, String[]> entry : paramMap.entrySet()) {
            fields.put(entry.getKey(), entry.getValue()[0]);
        }

        String vnp_SecureHash = fields.remove("vnp_SecureHash");
        String signData = fields.entrySet().stream()
                .filter(e -> e.getValue() != null && !e.getValue().isEmpty())
                .sorted(Map.Entry.comparingByKey())
                .map(e -> e.getKey() + "=" + e.getValue())
                .reduce((a, b) -> a + "&" + b)
                .orElse("");

        String myHash = vnpayService.hmacSHA512Internal(signData);

        if (!myHash.equals(vnp_SecureHash)) {
            return ResponseEntity.badRequest().body("Sai chữ ký. Giao dịch không hợp lệ.");
        }

        // Xử lý kết quả thanh toán theo vnp_ResponseCode
        String responseCode = fields.get("vnp_ResponseCode");
        if ("00".equals(responseCode)) {
            return ResponseEntity.ok("Thanh toán thành công!");
        } else {
            return ResponseEntity.status(400).body("Thanh toán thất bại. Mã lỗi: " + responseCode);
        }
    }


}
