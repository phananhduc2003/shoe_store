package com.fullstack.mystore.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.fullstack.mystore.entity.Product;
import com.fullstack.mystore.entity.ShoppingCart;
import com.fullstack.mystore.entity.ShoppingCartItem;
import com.fullstack.mystore.entity.User;
import com.fullstack.mystore.repository.ProductRepository;
import com.fullstack.mystore.repository.ShoppingCartItemRepository;
import com.fullstack.mystore.repository.ShoppingCartRepository;

import io.swagger.v3.oas.annotations.parameters.RequestBody;

@RestController
public class ShoppingCartItemController {
	@Autowired
	private ShoppingCartItemRepository shoppingCartItemRepository;
	
	@Autowired
	private ShoppingCartRepository shoppingCartRepository;
	
	 @Autowired
	 private ProductRepository productRepository; // Thêm để truy vấn thông tin sản phẩm

	public ShoppingCartItemController(ShoppingCartItemRepository shoppingCartItemRepository, ShoppingCartRepository shoppingCartRepository,ProductRepository productRepository) {
		super();
		this.shoppingCartItemRepository = shoppingCartItemRepository;
		this.shoppingCartRepository = shoppingCartRepository;
		this.productRepository = productRepository;
	
	}
	
	@PostMapping("/{userId}/{productId}/addItemtoCart")
    public ResponseEntity<String> addItemtoCart(@PathVariable Integer userId, @PathVariable  Integer productId, @RequestBody ShoppingCartItem shoppingCartItem) {
        // Kiểm tra xem người dùng có tồn tại không (giả sử bạn đã có cách kiểm tra người dùng)
        
        // Kiểm tra sản phẩm có tồn tại không
        Product product = productRepository.findById(productId).orElse(null);
        if (product == null) {
            return ResponseEntity.status(HttpStatus.NOT_FOUND).body("Product not found");
        }
        
        // Tạo giỏ hàng (nếu người dùng chưa có giỏ hàng)
        ShoppingCart shoppingCart = findOrCreateShoppingCartForUser(userId);
        
        // Kiểm tra nếu sản phẩm đã có trong giỏ hàng
        ShoppingCartItem existingItem = shoppingCartItemRepository.findByShoppingCartAndProduct(shoppingCart, product);
        
        if (existingItem != null) {
            // Nếu sản phẩm đã có trong giỏ hàng, tăng số lượng lên
            existingItem.setQuantity(existingItem.getQuantity() + shoppingCartItem.getQuantity());
            shoppingCartItemRepository.save(existingItem);
        } else {
            // Nếu sản phẩm chưa có, thêm mục giỏ hàng mới
            shoppingCartItem.setProduct(product);
            shoppingCartItem.setShoppingCart(shoppingCart);
            shoppingCartItemRepository.save(shoppingCartItem);
        }
        
        return ResponseEntity.ok("Item added to cart successfully!");
    }

    private ShoppingCart findOrCreateShoppingCartForUser(Integer userId) {
        // Tìm giỏ hàng của người dùng hoặc tạo mới nếu chưa có
        ShoppingCart shoppingCart = shoppingCartRepository.findByUserId(userId);
        
        if (shoppingCart == null) {
            shoppingCart = new ShoppingCart();
            shoppingCart.setUser(new User(userId)); // Tạo mới User nếu chưa có (giả sử bạn có cách tạo User)
            shoppingCartRepository.save(shoppingCart);
        }
        
        return shoppingCart;
    }
	
}
 